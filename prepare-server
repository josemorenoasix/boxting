ROOT_UID=0
SUCCESS=0
DOMAIN=boxting.ltd

## COLORS
printf_red=$'\e[1;31m'
printf_grn=$'\e[1;32m'
printf_yel=$'\e[1;33m'
printf_blu=$'\e[1;34m'
printf_mag=$'\e[1;35m'
printf_cyn=$'\e[1;36m'
printf_end=$'\e[0m'


# Es necesario ejecutar como root.
if [ "$UID" -ne "$ROOT_UID" ]
then
    printf " %s\n" "${printf_red}Necesitas ser root para ejecutar el script.${printf_end}"
    exit 0
fi

###############################
## USUARIOS/CLAVES SISTEMA   ##
###############################
MYSQL_ROOT_PASSWD="mysql_root_P1234"
NSS_DBNAME="nss_auth"
NSS_USER="nss-user"
NSS_USER_PASSWD="nss_user_P1234"
NSS_ADMIN="nss-shadow"
NSS_ADMIN_PASSWD="nss_adm_P1234"

###############################
## Instalacion de paquetes   ##
###############################
printf " %s\n" "${printf_grn}###############################${printf_end}"
printf " %s\n" "${printf_grn}## Instalacion de paquetes   ##${printf_end}"
printf " %s\n" "${printf_grn}###############################${printf_end}"

apt-get update
echo "mysql-server mysql-server/root_password password $MYSQL_ROOT_PASSWD" | debconf-set-selections
echo "mysql-server mysql-server/root_password_again password $MYSQL_ROOT_PASSWD" | debconf-set-selections
apt-get --assume-yes install mysql-server
apt-get --assume-yes install mysql-client libpam-mysql libnss-mysql-bg
apt-get --assume-yes install ssl-cert apache2 php libapache2-mod-php php-mysql
apt-get --assume-yes install php-zip php-xml php-curl php-mcrypt php-gd php-soap php-intl
apt-get --assume-yes install dnsmasq
apt-get --assume-yes install pure-ftpd
apt-get --assume-yes install build-essential autoconf automake libtool flex bison debhelper binutils-gold python

wget http://olivier.sessink.nl/jailkit/jailkit-2.19.tar.gz --directory-prefix=/tmp
tar /tmp/zxvf jailkit-2.19.tar.gz
./tmp/jailkit-2.19/debian/rules binary
dpkg -i /tmp/jailkit-2.19/jailkit_2.19-1_amd64.deb
mkdir /jail
jk_init -v /jail netutils basicshell jk_lsh openvpn ssh sftp


wget https://launchpad.net/ubuntu/+source/pam-mysql/0.7~RC1-4ubuntu2.1/+build/12134797/+files/libpam-mysql_0.7~RC1-4ubuntu2.1_amd64.deb
dpkg -i libpam-mysql_0.7~RC1-4ubuntu2.1_amd64.deb
apt-get update
apt-get install -f
dpkg -i libpam-mysql_0.7~RC1-4ubuntu2.1_amd64.deb

###############################
## mysql_secure_installation ##
###############################
printf "%s\n" "${printf_yel}## Â¿Ejecutar 'mysql_secure_installation'?  ##${printf_end}"
flag="false"
while [ $flag == "false" ]; do
        read -r -n 1 -p "${2:-Continue?} [y/n]: " REPLY
        case $REPLY in
                [yY]) mysql_secure_installation; flag="y" ;;
                [nN]) printf " %s\n" "${printf_red} Clave root por defecto: $MYSQL_ROOT_PASSWD ${printf_end}"; flag="n"  ;;
                *) printf " %s\n" "${printf_red}Invalid input${printf_end}"
        esac
done

###############################
## Configuracion             ##
##	PAM - libpam-mysql       ##
##  NSS - libnss-mysql-bg    ##
###############################
printf " %s\n" "${printf_grn}###############################${printf_end}"
printf " %s\n" "${printf_grn}## CONFIGURANDO...           ##${printf_end}"
printf " %s\n" "${printf_grn}## MySQL                     ##${printf_end}"
printf " %s\n" "${printf_grn}###############################${printf_end}"

printf " %s\n" "${printf_yel}## Descargando plantilla... ##${printf_end}"
wget "https://raw.githubusercontent.com/josemorenoasix/boxting/master/template-nss_mysql.sql"

printf " %s\n" "${printf_yel}## Importando variables a la plantilla... ##${printf_end}"
sed -i 's/template.nss.dbname/'"$NSS_DBNAME"'/g' template-nss_mysql.sql
sed -i 's/template.nss.user.passwd/'"$NSS_USER_PASSWD"'/g' template-nss_mysql.sql
sed -i 's/template.nss.admin.passwd/'"$NSS_ADMIN_PASSWD"'/g' template-nss_mysql.sql
sed -i 's/template.nss.user/'"$NSS_USER"'/g' template-nss_mysql.sql
sed -i 's/template.nss.admin/'"$NSS_ADMIN"'/g' template-nss_mysql.sql


printf " %s\n" "${printf_yel}## Creando base de datos: $NSS_DBNAME ##${printf_end}"
mysql --user=root --password="$MYSQL_ROOT_PASSWD" << END
CREATE DATABASE IF NOT EXISTS $NSS_DBNAME DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;
END

printf " %s\n" "${printf_yel}## Ejecutando script SQL en $NSS_DBNAME ##${printf_end}"
mysql --user=root --password="$MYSQL_ROOT_PASSWD" "$NSS_DBNAME" < template-nss_mysql.sql

printf " %s\n" "${printf_grn}###############################${printf_end}"
printf " %s\n" "${printf_grn}## CONFIGURANDO...           ##${printf_end}"
printf " %s\n" "${printf_grn}## NSS - libnss-mysql-bg     ##${printf_end}"
printf " %s\n" "${printf_grn}###############################${printf_end}"

printf " %s\n" "${printf_yel}## Editando /etc/nsswitch.conf... ##${printf_end}"
cp /etc/nsswitch.conf /etc/nsswitch.conf.orig
sed -i 's/^passwd: *compat$/passwd:         compat mysql/g' /etc/nsswitch.conf
sed -i 's/^group:  *compat$/group:          compat mysql/g' /etc/nsswitch.conf
sed -i 's/^shadow: *compat$/passwd:         compat mysql/g' /etc/nsswitch.conf

printf " %s\n" "${printf_yel}## Editando /etc/libnss-mysql.cfg... ##${printf_end}"
cp /etc/libnss-mysql.cfg /etc/libnss-mysql.cfg.orig
sed -i 's/^database *auth$/database    '"$NSS_DBNAME"'/g' /etc/libnss-mysql.cfg
sed -i 's/^username *nss-user$/username    '"$NSS_USER"'/g' /etc/libnss-mysql.cfg
sed -i 's/^password *userpass$/password    '"$NSS_USER_PASSWD"'/g' /etc/libnss-mysql.cfg

printf " %s\n" "${printf_yel}## Editando '/etc/libnss-mysql-root.cfg' ... ##${printf_end}"
cp /etc/libnss-mysql-root.cfg /etc/libnss-mysql-root.cfg.orig
sed -i 's/^username *nss-root$/username         '"$NSS_ADMIN"'/g' /etc/libnss-mysql-root.cfg
sed -i 's/^password *rootpass$/password         '"$NSS_ADMIN_PASSWD"'/g' /etc/libnss-mysql-root.cfg
printf " %s\n" "${printf_yel}## Cambiando permisos (600) '/etc/libnss-mysql-root.cfg' ... ##${printf_end}"
chmod 600 /etc/libnss-mysql-root.cfg

###############################
## Configuracion             ##
##	PAM - libpam-mysql       ##
###############################
printf " %s\n" "${printf_grn}###############################${printf_end}"
printf " %s\n" "${printf_grn}## CONFIGURANDO...           ##${printf_end}"
printf " %s\n" "${printf_grn}## PAM - libpam-mysql        ##${printf_end}"
printf " %s\n" "${printf_grn}###############################${printf_end}"

printf " %s\n" "${printf_yel}## Configurando '/etc/pam-mysql.conf' ... ##${printf_end}"
printf " %s\n" "${printf_yel}## Configurando '/etc/pam-mysql-shadow.conf' ... ##${printf_end}"

mv /etc/pam-mysql.conf /etc/pam-mysql.conf.orig

echo "
users.host             = localhost
users.database         = $NSS_DBNAME
users.db_user          = $NSS_USER
users.db_passwd        = $NSS_USER_PASSWD
users.table            = users
users.user_column      = username
users.password_column  = password
users.password_crypt   = 4
verbose (1)
" > /etc/pam-mysql.conf

echo "
users.host             = localhost
users.database         = $NSS_DBNAME
users.db_user          = $NSS_ADMIN
users.db_passwd        = $NSS_ADMIN_PASSWD
users.table            = users
users.user_column      = username
users.password_column  = password
users.password_crypt   = 4
verbose (1)
" > /etc/pam-mysql-shadow.conf

cp /etc/pam.d/common-account  /etc/pam.d/common-account.orig
cp /etc/pam.d/common-auth     /etc/pam.d/common-auth.orig     
cp /etc/pam.d/common-session  /etc/pam.d/common-session.orig  
cp /etc/pam.d/common-password /etc/pam.d/common-password.orig 

printf " %s\n" "${printf_yel}## Reconfigurando '/etc/pam.d/common-account' ... ##${printf_end}"
printf " %s\n" "${printf_yel}## Reconfigurando '/etc/pam.d/common-session' ... ##${printf_end}"
printf " %s\n" "${printf_yel}## Reconfigurando '/etc/pam.d/common-auth' ... ##${printf_end}"
printf " %s\n" "${printf_yel}## Reconfigurando '/etc/pam.d/common-shadow' ... ##${printf_end}"

echo "
account sufficient      pam_mysql.so config_file=/etc/pam-mysql.conf
account required        pam_unix.so
" > /etc/pam.d/common-account

echo "
session sufficient      pam_mysql.so config_file=/etc/pam-mysql.conf
session required        pam_unix.so
" > /etc/pam.d/common-session

echo "
auth    sufficient      pam_mysql.so config_file=/etc/pam-mysql-shadow.conf
auth    required        pam_unix.so nullok_secure
" > /etc/pam.d/common-auth

echo "
password        sufficient      pam_mysql.so config_file=/etc/pam-mysql-shadow.conf
password        required        pam_unix.so nullok obscure sha512
" > /etc/pam.d/common-password

printf " %s\n" "${printf_yel}## Asegurando '/etc/pam.d/common-*' ... ##${printf_end}"
chmod 600 /etc/pam.d/common-*


###############################
## Configuracion pure-ftpd  ##
###############################
# Crear carpetas para almacenar el certificados,
# y claves publcio/privadas del servidor FTP.
# Cifrado SSL/TLS activado.
# Limite de conexiones simultaneas.
# No permitido usuarios anonimos.
# Enjaular usuarios.
# Cambio de permisos sobre las carpetas
# Obtiene los usuarios desde mySQL.

SUBJ_C="ES"
SUBJ_ST="Province"
SUBJ_L="City"
SUBJ_O="$DOMAIN"
SUBJ_OU="$DOMAIN SSL Unit"
SUBJ_CN="$DOMAIN"

mkdir -p /etc/ssl/private/
openssl req -new -newkey rsa:4096 -days 97300 -nodes -x509 -subj "/C=$SUBJ_C/ST=$SUBJ_ST/L=$SUBJ_L/O=$SUBJ_O/OU=$SUBJ_OU/CN=$SUBJ_CN" -keyout /etc/ssl/private/pure-ftpd.pem -out /etc/ssl/private/pure-ftpd.pem
chmod 600 /etc/ssl/private/pure-ftpd.pem

echo '20000 20099' > /etc/pure-ftpd/conf/PassivePortRange
echo "yes" > /etc/pure-ftpd/conf/NoAnonymous
echo "yes" > /etc/pure-ftpd/conf/ChrootEveryone
echo "yes" > /etc/pure-ftpd/conf/IPV4Only
echo "2" > /etc/pure-ftpd/conf/TLS
echo "auth    sufficient      pam_mysql.so config_file=/etc/pam-mysql-shadow.conf sense=deny file=/etc/ftpusers onerr=succeed" >> /etc/pam.d/pure-ftpd
service pure-ftpd restart


###############################
## Directorios de claves SSL ##
###############################
# Crear carpetas para almacenar los certificados,
# y claves publcio/privadas de cada dominio.
# Cambio de propietario sobre las carpetas
# Cambio de permisos sobre las carpetas

mkdir -vp /etc/apache2/ssl/private
chown -vR root:root /etc/apache2/ssl/
chown -vR root:ssl-cert /etc/apache2/ssl/private/
chmod -v 644 /etc/apache2/ssl
chmod -v 640 /etc/apache2/ssl/private

###############################
## Resolucion DNSMASQ        ##
###############################
# Agregamos al fichero de /etc/hosts nuestra IP y dominio.
# Cualquier cliente con nuestro DNS configurado accede via: dominio.ltd

sed -i "1s/^/$(ifconfig  | grep 'Direc. inet:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}')  $DOMAIN www.$DOMAIN \n/" /etc/hosts


###############################
## Acceso sftp para usuarios ##
###############################
# Crear grupo sftponly
# Editar fichero de configuracion de sshd
# Reiniciar el servidor ssh

groupadd -r sftponly
echo "
# Jaula para usuarios con acceso sftp
# Descomentar PasswordAuthentication para forzar el acceso con clave privada
Subsystem sftponly internal-sftp
Match Group sftponly
    ChrootDirectory %h
    ForceCommand internal-sftp
    AllowTcpForwarding no
    X11Forwarding no
    #PasswordAuthentication no
" >> /etc/ssh/sshd_config
service sshd restart
